{"version":3,"sources":["components/ContactsList/ContactsList.module.css","components/Phonebook/Phonebook.module.css","components/Section/Section.js","redux/contacts/contacts-actions.js","components/Form/Form.js","redux/contacts/contacts-selectors.js","components/FilterField/FilterField.js","components/ContactsList/ContactsList.js","components/Phonebook/Phonebook.js","App.js","redux/contacts/contacts-reducer.js","redux/store.js","index.js","components/Form/Form.module.css"],"names":["module","exports","Section","title","children","addContact","createAction","deleteContact","updateFilter","connect","state","items","contacts","dispatch","item","useState","name","setName","phone","setPhone","resetState","handleInputChange","currentTarget","value","checkContact","contact","nameNormalized","toLowerCase","dublicateContactByName","find","alert","id","uuidv4","onSubmit","e","preventDefault","trim","className","s","Form","Label","type","onChange","Input","buttonSubmit","getItems","getFilterValue","filter","FilterField","useSelector","useDispatch","target","ContactsList","actions","length","filteredContacts","filtered","includes","filteredList","map","Item","onClick","Button","filteredContactsShow","Phonebook","App","itemsReducer","createReducer","action","payload","filterReducer","_","contactsReducer","combineReducers","contactsPersistConfig","key","storage","blacklist","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","store","configureStore","reducer","persistReducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.766a96a9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Item\":\"ContactsList_Item__NBY5W\",\"Button\":\"ContactsList_Button__1j26W\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Phonebook\":\"Phonebook_Phonebook__2YDSI\"};","import React from 'react';\n\nconst Section = ({ title, children }) => (\n  <section>\n    {title && <h2>{title}</h2>}\n    {children}\n  </section>\n);\nexport default Section;\n","import { createAction } from '@reduxjs/toolkit';\n\nexport const addContact = createAction('phonebook/addContact');\n\nexport const deleteContact = createAction('phonebook/deleteContact');\n\nexport const updateFilter = createAction('phonebook/updateFilter');\n","import { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { addContact } from '../../redux/contacts/contacts-actions';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport s from './Form.module.css';\n\nfunction Form({ addContact, items }) {\n  const [name, setName] = useState('');\n  const [phone, setPhone] = useState('');\n\n  const resetState = () => {\n    setName('');\n    setPhone('');\n  };\n\n  const handleInputChange = ({ currentTarget }) => {\n    const { name, value } = currentTarget;\n    if (name === 'name') {\n      setName(value);\n      return;\n    }\n    setPhone(value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    checkContact({\n      name: name.trim(),\n      phone: phone.trim(),\n    });\n  };\n\n  const checkContact = contact => {\n    const { name, phone } = contact;\n    if (name === '' || phone === '') {\n      alert('Please fill in the form!');\n      return;\n    }\n    const nameNormalized = name.toLowerCase();\n\n    const dublicateContactByName = items.find(\n      ({ name }) => name.toLowerCase() === nameNormalized,\n    );\n    if (dublicateContactByName) {\n      alert(`${dublicateContactByName.name} is already in contacts.`);\n      resetState();\n      return;\n    }\n    contact.id = uuidv4();\n    addContact(contact);\n    resetState();\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className={s.Form}>\n      <label className={s.Label}>\n        Name\n        <input\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handleInputChange}\n          className={s.Input}\n        />\n      </label>\n      <label className={s.Label}>\n        Phone number\n        <input\n          type=\"tel\"\n          name=\"phone\"\n          value={phone}\n          onChange={handleInputChange}\n          className={s.Input}\n        />\n      </label>\n      <button type=\"submit\" className={s.buttonSubmit}>\n        Add Contact\n      </button>\n    </form>\n  );\n}\n\nconst mapStateToProps = state => ({\n  items: state.contacts.items,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  addContact: item => dispatch(addContact(item)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Form);\n","export const getItems = state => state.contacts.items;\nexport const getFilterValue = state => state.contacts.filter;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { updateFilter } from '../../redux/contacts/contacts-actions';\nimport { getFilterValue } from '../../redux/contacts/contacts-selectors';\n\nimport s from '../Form/Form.module.css';\n\nexport default function FilterField() {\n  const value = useSelector(getFilterValue);\n\n  const dispatch = useDispatch();\n\n  const handleFilter = e => {\n    return dispatch(updateFilter(e.target.value.toLowerCase()));\n  };\n\n  return (\n    <div>\n      <input\n        type=\"text\"\n        value={value}\n        onChange={handleFilter}\n        className={s.Input}\n      />\n    </div>\n  );\n}\n","import { useSelector, useDispatch } from 'react-redux';\nimport * as actions from '../../redux/contacts/contacts-actions';\nimport FilterField from '../FilterField/FilterField';\nimport {\n  getItems,\n  getFilterValue,\n} from '../../redux/contacts/contacts-selectors';\nimport s from './ContactsList.module.css';\n\nfunction ContactsList() {\n  const items = useSelector(getItems);\n  const filter = useSelector(getFilterValue);\n\n  const dispatch = useDispatch();\n\n  const deleteContact = e => dispatch(actions.deleteContact(e.target.id));\n\n  const filteredList = () => {\n    if (items.length === 0) return;\n\n    const filtered = items.filter(({ name }) => {\n      const nameNormalized = name.toLowerCase();\n\n      return nameNormalized.includes(filter.trim());\n    });\n\n    return filtered.length > 0 ? filtered : false;\n  };\n\n  const filteredContactsShow = filteredContacts => {\n    return filteredContacts.map(({ id, name, phone }) => (\n      <li key={id} className={s.Item}>\n        {name}: {phone}\n        <button id={id} onClick={deleteContact} className={s.Button}>\n          Delete\n        </button>\n      </li>\n    ));\n  };\n  if (items.length <= 0) return <p>Contact list is empty</p>;\n  const filteredContacts = filteredList();\n  return (\n    <div>\n      {items.length > 0 && (\n        <div>\n          <p>Find contact by name</p>\n          <FilterField />\n        </div>\n      )}\n\n      <ul>\n        {filteredContacts ? (\n          filteredContactsShow(filteredContacts)\n        ) : (\n          <p>Nothing found!</p>\n        )}\n      </ul>\n    </div>\n  );\n}\n\nexport default ContactsList;\n","import Section from '../Section/Section';\nimport Form from '../Form/Form';\nimport ContactsList from '../ContactsList/ContactsList';\n\nimport s from './Phonebook.module.css';\n\nfunction Phonebook() {\n  return (\n    <div className={s.Phonebook}>\n      <Section title={'Phonebook'}>\n        <Form />\n        <Section title={'Contacts'}>\n          <ContactsList />\n        </Section>\n      </Section>\n    </div>\n  );\n}\n\nexport default Phonebook;\n","import Phonebook from './components/Phonebook/Phonebook';\n\nfunction App() {\n  return (\n    <div>\n      <Phonebook />\n    </div>\n  );\n}\n\nexport default App;\n","import { createReducer } from '@reduxjs/toolkit';\nimport { combineReducers } from 'redux';\nimport * as actions from './contacts-actions';\n\nconst itemsReducer = createReducer([], {\n  [actions.addContact]: (state, action) => [...state, action.payload],\n  [actions.deleteContact]: (state, action) =>\n    state.filter(item => item.id !== action.payload),\n});\n\nconst filterReducer = createReducer('', {\n  [actions.updateFilter]: (_, action) => action.payload,\n});\n\nconst contactsReducer = combineReducers({\n  items: itemsReducer,\n  filter: filterReducer,\n});\n\nexport default contactsReducer;\n","import contactsReducer from './contacts/contacts-reducer';\nimport { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\n\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\n\nconst contactsPersistConfig = {\n  key: 'root',\n  storage,\n  blacklist: ['filter'],\n};\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n];\n\nconst store = configureStore({\n  reducer: {\n    contacts: persistReducer(contactsPersistConfig, contactsReducer),\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nconst persistor = persistStore(store);\n\nexport default { store, persistor };\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport App from './App';\n\nimport store from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Form\":\"Form_Form__2GyPp\",\"buttonSubmit\":\"Form_buttonSubmit__1wAf4\",\"Label\":\"Form_Label__1EcPO\",\"Input\":\"Form_Input__2V2Po\"};"],"sourceRoot":""}